var documenterSearchIndex = {"docs":
[{"location":"homework1/#Dokumentacija-za-Domačo-Nalogo-1","page":"Homework 1","title":"Dokumentacija za Domačo Nalogo 1","text":"","category":"section"},{"location":"homework1/#Funkcionalnosti-paketa","page":"Homework 1","title":"Funkcionalnosti paketa","text":"","category":"section"},{"location":"homework1/#Homework1.RedkaMatrika","page":"Homework 1","title":"Homework1.RedkaMatrika","text":"RedkaMatrika{T<:Number}\n\nA custom sparse matrix data type.\n\n\n\n\n\n","category":"type"},{"location":"homework1/#Homework1.sor","page":"Homework 1","title":"Homework1.sor","text":"sor(A, b, x0, omega; tol=1e-10, max_iter=1000) -> (Vector, Int)\n\nSolves the linear system Ax = b using the Successive Over-Relaxation (SOR) iterative method.\n\nArguments\n\nA::RedkaMatrika: The square, sparse matrix of the system.\nb::Vector: The right-hand side vector.\nx0::Vector: The initial guess for the solution.\nomega::Real: The relaxation parameter (typically 0 < omega < 2).\ntol::Real=1e-10: The tolerance for stopping; iteration stops when the infinity norm of the residual is less than tol.\nmax_iter::Int=1000: The maximum number of iterations.\n\nReturns\n\nVector: The computed approximate solution x.\nInt: The number of iterations performed.\n\n\n\n\n\n","category":"function"},{"location":"homework1/#Base.getindex","page":"Homework 1","title":"Base.getindex","text":"getindex(A::RedkaMatrika{T}, i::Int, j::Int) where T\n\nReturns the value of the element at position (i, j). Enables A[i, j] syntax.\n\n\n\n\n\n","category":"function"},{"location":"homework1/#Base.size","page":"Homework 1","title":"Base.size","text":"size(A::RedkaMatrika) -> Tuple{Int, Int}\n\nReturns the dimensions of the sparse matrix as a tuple (n, n).\n\n\n\n\n\n","category":"function"},{"location":"homework1/#Base.setindex!","page":"Homework 1","title":"Base.setindex!","text":"setindex!(A::RedkaMatrika{T}, value::T, i::Int, j::Int) where T\n\nSets the value of the element at position (i, j). Enables A[i, j] = value syntax.\n\n\n\n\n\n","category":"function"},{"location":"homework1/#Base.:*","page":"Homework 1","title":"Base.:*","text":"*(A::RedkaMatrika{T}, v::Vector{T}) where T -> Vector{T}\n\nComputes the product of a sparse matrix A and a vector v.\n\n\n\n\n\n","category":"function"},{"location":"homework1/#Uporaba-metode","page":"Homework 1","title":"Uporaba metode","text":"","category":"section"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"V tem poglavju si bomo pogedali primer uporabe metode sor na problemu vložitvi grafa v ravnino. Nato bomo na primeru poiskali optimalni (\\omega).","category":"page"},{"location":"homework1/#Vložitev-grafa-v-ravnino","page":"Homework 1","title":"Vložitev grafa v ravnino","text":"","category":"section"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"Za demonstracijo uporabe SOR metode smo implementirali algoritem za vložitev grafa v ravnino z uporabo fizikalne metode. Ta metoda modelira graf kot sistem vzmeti, kjer so vozlišča predstavljena kot masne točke, povezave pa kot vzmeti z naravno dolžino nič.","category":"page"},{"location":"homework1/#Matematični-model","page":"Homework 1","title":"Matematični model","text":"","category":"section"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"Fizikalna metoda temelji na minimizaciji energije sistema vzmeti. Za graf G = (V E) z vozlišči V in povezavami E definiramo energijsko funkcijo:","category":"page"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"E = frac12 sum_(ij) in E p_i - p_j^2","category":"page"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"kjer je p_i pozicija vozlišča i v ravnini. Minimum te funkcije dosežemo, ko je za vsako prosto vozlišče i izpolnjen pogoj:","category":"page"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"sum_j in N(i) (p_i - p_j) = 0","category":"page"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"kjer je N(i) množica sosedov vozlišča i. To vodi do sistema linearnih enačb oblike Ax = b, kjer matrika A vsebuje informacije o strukturi grafa.","category":"page"},{"location":"homework1/#Primer:-krožna-lestev","page":"Homework 1","title":"Primer: krožna lestev","text":"","category":"section"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"Kot testni primer smo uporabili krožno lestev z n = 8 vozlišči na vsakem od dveh ciklov. Graf ima skupaj 16 vozlišč, pri čemer so vozlišča prvega cikla (1-8) fiksirana na enotski krožnici, vozlišča drugega cikla (9-16) pa so prosta in jih določimo z optimizacijo.","category":"page"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"(Image: Circular Ladder Graph)","category":"page"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"Rezultat prikazuje simetrično vložitev, kjer so prosta vozlišča razporejena v notranjem krogu, povezana pa so z ustreznimi vozlišči na zunanjem krogu.","category":"page"},{"location":"homework1/#Optimalni-omega","page":"Homework 1","title":"Optimalni omega","text":"","category":"section"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"Parameter omega v SOR metodi določa hitrost konvergence iterativnega postopka. Za optimalno delovanje metode je ključno določiti pravo vrednost tega parametra.","category":"page"},{"location":"homework1/#Teoretično-ozadje","page":"Homework 1","title":"Teoretično ozadje","text":"","category":"section"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"SOR metoda je posplošitev Gauss-Seidlove iteracije z relaksacijskim parametrom omega:","category":"page"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"x_i^(k+1) = (1-omega)x_i^(k) + fracomegaa_iileft(b_i - sum_ji a_ijx_j^(k+1) - sum_ji a_ijx_j^(k)right)","category":"page"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"Za simetrične pozitivno definitne matrike obstaja optimalna vrednost omega_opt, ki minimizira spektralni radij iteracijske matrike.","category":"page"},{"location":"homework1/#Eksperimentalna-analiza","page":"Homework 1","title":"Eksperimentalna analiza","text":"","category":"section"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"Za sistem linearnih enačb iz problema vložitve krožne lestvi smo testirali različne vrednosti parametra omega v intervalu 01 19 in izmerili število iteracij potrebnih za konvergenco.","category":"page"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"(Image: Odvisnost hitrosti konvergence)","category":"page"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"Rezultati kažejo tipično U-obliko krivulje, kjer:","category":"page"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"Pri nizkih vrednostih omega  1 je konvergenca počasna (podrelaksacija)\nOptimalna vrednost omega_opt = 11 zagotavlja najhitrejšo konvergenco\nPri visokih vrednostih omega  15 se hitrost konvergence ponovno zmanjša (nadrelaksacija)","category":"page"},{"location":"homework1/#Rezultati","page":"Homework 1","title":"Rezultati","text":"","category":"section"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"Za obravnavani sistem smo dobili:","category":"page"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"Optimalna vrednost: omega_opt = 11\nMinimalno število iteracij: 23 iteracij","category":"page"},{"location":"homework1/","page":"Homework 1","title":"Homework 1","text":"Ta rezultat je skladen s teoretičnimi pričakovanji za pozitivno definitne sisteme, kjer optimalna vrednost omega običajno leži med 1 in 2. Vrednost omega = 11 kaže na to, da je za ta specifičen problem potrebna le rahla nadrelaksacija za dosego optimalnih rezultatov.","category":"page"},{"location":"#Dokumentacija-za-Domačo-Nalogo","page":"Overview","title":"Dokumentacija za Domačo Nalogo","text":"","category":"section"},{"location":"","page":"Overview","title":"Overview","text":"Dobrodošli v dokumentaciji za paket, ki je bil razvit v sklopu domače naloge. Ta paket ponuja orodja za delo z redkimi matrikami, vključno z implementacijo reševalca SOR in metod za vlaganje grafov.","category":"page"}]
}
